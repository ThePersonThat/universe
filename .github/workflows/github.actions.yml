name: Project pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build and test
        run: |
          mvn clean install --quiet
          mvn test --quiet

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run check style
        uses: nikitasavinov/checkstyle-action@master
        with:
          level: 'Error'
          reporter: 'github-pr-check'
          checkstyle_config: 'sun_checks.xml'
          fail_on_error: true

  autotest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install npm
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install selenium-side-runner
        run: npm install -g selenium-side-runner

      - name: Run app
        run: |
          make migrate
          make build
          make run &

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@latest
        with:
            chrome-version: stable

      - name: Download chrome driver
        uses: nanasess/setup-chromedriver@master

      - name: Launch chrome driver
        run: |
            export DISPLAY=:99
            chromedriver --url-base=/wd/hub &
            sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

#      - name: Run autotests
#        run: selenium-side-runner -c "chromeOptions.args=[headless,no-sandbox,disable-dev-shm-usage]" -d -t 15000 autotest/Uni.side

  code_quality:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.host.url=${SONAR_HOST_URL} 
